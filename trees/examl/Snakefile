rule all:
    input:
        "vill_train_gene_psr.nwk",
        "vill_1_gene_psr.nwk",
        "vill_2_gene_psr.nwk",
        "vill_3_gene_psr.nwk",
        "vill_4_gene_psr.nwk"

rule rename:
    input:
        "ExaML_result.{dataset}_gene_psr"
    output:
        "{dataset}_gene_psr.nwk"
    shell:
        "cat {input} > {output}"

rule examl_gene_psr:
    input:
        "{dataset}_gene.binary",
        "RAxML_parsimonyTree.{dataset)_startingTree"
    params:
        prefix = "{dataset}_gene_psr"
    output:
        "ExaML_result.{dataset}_gene_psr"
    threads:
        4
    log:
        "logs/examl_gene_psr.log"
    message:
        "Running ExaML on {dataset} with gene partitions and PSR"
    shell:
        "mpirun -np {threads} /usr/local/bin/examl -D -t {input[1]} -m PSR -s {input[0]} -n {prefix.params}"

rule parsimonytree:
    input:
        "../../data/{dataset}.phy"
    params:
        prefix = "{dataset}_startingTree"
    output:
        "RAxML_parsimonyTree.{dataset}_startingTree",
        temp("RAxML_info.{dataset}_startingTree")
    log:
        "logs/parsimonytree.log"
    shell:
        "/usr/local/bin/raxmlHPC-PTHREADS-SSE3 -y -m GTRCAT -p 12345 -s {input} -n {params.prefix}"

rule parseexaml_gene:
    input:
        "../../data/{dataset}.phy",
        "vill_partition_gene"
    params:
        prefix = "{dataset}_gene"
    output:
        "{dataset}_gene.binary",
        temp("RAxML_info.{dataset}_gene")
    log:
        "logs/parseexaml_gene.log"
    message:
        "Parsing {dataset} into genes using parse-examl"
    shell:
        "/usr/local/bin/parse-examl -s {input[0]} -m DNA -q {input[1]} -n {params.prefix}"
 
